// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dt.Calculator.Database;

namespace dt.Calculator.Database.Migrations
{
    [DbContext(typeof(DtDbContext))]
    partial class DtDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("dt.Calculator.Model.Domain.Calculator.Calculator", b =>
                {
                    b.Property<int>("CalculatorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalculatorSettingId");

                    b.Property<string>("CountryIso")
                        .HasMaxLength(2);

                    b.HasKey("CalculatorId");

                    b.HasIndex("CalculatorSettingId");

                    b.HasIndex("CountryIso");

                    b.ToTable("Calculators","Calculator");

                    b.HasData(
                        new { CalculatorId = 1, CalculatorSettingId = 3, CountryIso = "GB" },
                        new { CalculatorId = 2, CalculatorSettingId = 4, CountryIso = "AU" },
                        new { CalculatorId = 3, CalculatorSettingId = 5, CountryIso = "IE" },
                        new { CalculatorId = 4, CalculatorSettingId = 6, CountryIso = "CA" },
                        new { CalculatorId = 5, CalculatorSettingId = 7, CountryIso = "CA" },
                        new { CalculatorId = 6, CalculatorSettingId = 8, CountryIso = "BH" },
                        new { CalculatorId = 7, CalculatorSettingId = 9, CountryIso = "CH" },
                        new { CalculatorId = 8, CalculatorSettingId = 10, CountryIso = "CN" },
                        new { CalculatorId = 9, CalculatorSettingId = 11, CountryIso = "CL" },
                        new { CalculatorId = 10, CalculatorSettingId = 12, CountryIso = "HK" },
                        new { CalculatorId = 11, CalculatorSettingId = 13, CountryIso = "HK" },
                        new { CalculatorId = 12, CalculatorSettingId = 2, CountryIso = "AD" },
                        new { CalculatorId = 13, CalculatorSettingId = 1, CountryIso = "AE" },
                        new { CalculatorId = 14, CalculatorSettingId = 1, CountryIso = "AF" },
                        new { CalculatorId = 15, CalculatorSettingId = 1, CountryIso = "AG" },
                        new { CalculatorId = 16, CalculatorSettingId = 1, CountryIso = "AI" },
                        new { CalculatorId = 17, CalculatorSettingId = 2, CountryIso = "AL" },
                        new { CalculatorId = 18, CalculatorSettingId = 1, CountryIso = "AM" },
                        new { CalculatorId = 19, CalculatorSettingId = 1, CountryIso = "AO" },
                        new { CalculatorId = 20, CalculatorSettingId = 1, CountryIso = "AQ" },
                        new { CalculatorId = 21, CalculatorSettingId = 1, CountryIso = "AR" },
                        new { CalculatorId = 22, CalculatorSettingId = 1, CountryIso = "AS" },
                        new { CalculatorId = 23, CalculatorSettingId = 2, CountryIso = "AT" },
                        new { CalculatorId = 25, CalculatorSettingId = 1, CountryIso = "AW" },
                        new { CalculatorId = 26, CalculatorSettingId = 2, CountryIso = "AX" },
                        new { CalculatorId = 27, CalculatorSettingId = 1, CountryIso = "AZ" },
                        new { CalculatorId = 28, CalculatorSettingId = 2, CountryIso = "BA" },
                        new { CalculatorId = 29, CalculatorSettingId = 1, CountryIso = "BB" },
                        new { CalculatorId = 30, CalculatorSettingId = 1, CountryIso = "BD" },
                        new { CalculatorId = 31, CalculatorSettingId = 2, CountryIso = "BE" },
                        new { CalculatorId = 32, CalculatorSettingId = 1, CountryIso = "BF" },
                        new { CalculatorId = 33, CalculatorSettingId = 2, CountryIso = "BG" },
                        new { CalculatorId = 35, CalculatorSettingId = 1, CountryIso = "BI" },
                        new { CalculatorId = 36, CalculatorSettingId = 1, CountryIso = "BJ" },
                        new { CalculatorId = 37, CalculatorSettingId = 1, CountryIso = "BL" },
                        new { CalculatorId = 38, CalculatorSettingId = 1, CountryIso = "BM" },
                        new { CalculatorId = 39, CalculatorSettingId = 1, CountryIso = "BN" },
                        new { CalculatorId = 40, CalculatorSettingId = 1, CountryIso = "BO" },
                        new { CalculatorId = 41, CalculatorSettingId = 1, CountryIso = "BQ" },
                        new { CalculatorId = 42, CalculatorSettingId = 1, CountryIso = "BR" },
                        new { CalculatorId = 43, CalculatorSettingId = 1, CountryIso = "BS" },
                        new { CalculatorId = 44, CalculatorSettingId = 1, CountryIso = "BT" },
                        new { CalculatorId = 45, CalculatorSettingId = 1, CountryIso = "BV" },
                        new { CalculatorId = 46, CalculatorSettingId = 1, CountryIso = "BW" },
                        new { CalculatorId = 47, CalculatorSettingId = 2, CountryIso = "BY" },
                        new { CalculatorId = 48, CalculatorSettingId = 1, CountryIso = "BZ" },
                        new { CalculatorId = 50, CalculatorSettingId = 1, CountryIso = "CC" },
                        new { CalculatorId = 51, CalculatorSettingId = 1, CountryIso = "CD" },
                        new { CalculatorId = 52, CalculatorSettingId = 1, CountryIso = "CF" },
                        new { CalculatorId = 53, CalculatorSettingId = 1, CountryIso = "CG" },
                        new { CalculatorId = 55, CalculatorSettingId = 1, CountryIso = "CI" },
                        new { CalculatorId = 56, CalculatorSettingId = 1, CountryIso = "CK" },
                        new { CalculatorId = 58, CalculatorSettingId = 1, CountryIso = "CM" },
                        new { CalculatorId = 60, CalculatorSettingId = 1, CountryIso = "CO" },
                        new { CalculatorId = 61, CalculatorSettingId = 1, CountryIso = "CR" },
                        new { CalculatorId = 62, CalculatorSettingId = 1, CountryIso = "CU" },
                        new { CalculatorId = 63, CalculatorSettingId = 1, CountryIso = "CV" },
                        new { CalculatorId = 64, CalculatorSettingId = 1, CountryIso = "CW" },
                        new { CalculatorId = 65, CalculatorSettingId = 1, CountryIso = "CX" },
                        new { CalculatorId = 66, CalculatorSettingId = 2, CountryIso = "CY" },
                        new { CalculatorId = 67, CalculatorSettingId = 2, CountryIso = "CZ" },
                        new { CalculatorId = 68, CalculatorSettingId = 2, CountryIso = "DE" },
                        new { CalculatorId = 69, CalculatorSettingId = 1, CountryIso = "DJ" },
                        new { CalculatorId = 70, CalculatorSettingId = 2, CountryIso = "DK" },
                        new { CalculatorId = 71, CalculatorSettingId = 1, CountryIso = "DM" },
                        new { CalculatorId = 72, CalculatorSettingId = 1, CountryIso = "DO" },
                        new { CalculatorId = 73, CalculatorSettingId = 1, CountryIso = "DZ" },
                        new { CalculatorId = 74, CalculatorSettingId = 1, CountryIso = "EC" },
                        new { CalculatorId = 75, CalculatorSettingId = 2, CountryIso = "EE" },
                        new { CalculatorId = 76, CalculatorSettingId = 1, CountryIso = "EG" },
                        new { CalculatorId = 77, CalculatorSettingId = 1, CountryIso = "EH" },
                        new { CalculatorId = 78, CalculatorSettingId = 1, CountryIso = "ER" },
                        new { CalculatorId = 79, CalculatorSettingId = 2, CountryIso = "ES" },
                        new { CalculatorId = 80, CalculatorSettingId = 1, CountryIso = "ET" },
                        new { CalculatorId = 81, CalculatorSettingId = 2, CountryIso = "FI" },
                        new { CalculatorId = 82, CalculatorSettingId = 1, CountryIso = "FJ" },
                        new { CalculatorId = 83, CalculatorSettingId = 1, CountryIso = "FK" },
                        new { CalculatorId = 84, CalculatorSettingId = 1, CountryIso = "FM" },
                        new { CalculatorId = 85, CalculatorSettingId = 2, CountryIso = "FO" },
                        new { CalculatorId = 86, CalculatorSettingId = 2, CountryIso = "FR" },
                        new { CalculatorId = 87, CalculatorSettingId = 1, CountryIso = "GA" },
                        new { CalculatorId = 89, CalculatorSettingId = 1, CountryIso = "GD" },
                        new { CalculatorId = 90, CalculatorSettingId = 1, CountryIso = "GE" },
                        new { CalculatorId = 91, CalculatorSettingId = 1, CountryIso = "GF" },
                        new { CalculatorId = 92, CalculatorSettingId = 2, CountryIso = "GG" },
                        new { CalculatorId = 93, CalculatorSettingId = 1, CountryIso = "GH" },
                        new { CalculatorId = 94, CalculatorSettingId = 2, CountryIso = "GI" },
                        new { CalculatorId = 95, CalculatorSettingId = 1, CountryIso = "GL" },
                        new { CalculatorId = 96, CalculatorSettingId = 1, CountryIso = "GM" },
                        new { CalculatorId = 97, CalculatorSettingId = 1, CountryIso = "GN" },
                        new { CalculatorId = 98, CalculatorSettingId = 1, CountryIso = "GP" },
                        new { CalculatorId = 99, CalculatorSettingId = 1, CountryIso = "GQ" },
                        new { CalculatorId = 100, CalculatorSettingId = 2, CountryIso = "GR" },
                        new { CalculatorId = 101, CalculatorSettingId = 1, CountryIso = "GS" },
                        new { CalculatorId = 102, CalculatorSettingId = 1, CountryIso = "GT" },
                        new { CalculatorId = 103, CalculatorSettingId = 1, CountryIso = "GU" },
                        new { CalculatorId = 104, CalculatorSettingId = 1, CountryIso = "GW" },
                        new { CalculatorId = 105, CalculatorSettingId = 1, CountryIso = "GY" },
                        new { CalculatorId = 107, CalculatorSettingId = 1, CountryIso = "HM" },
                        new { CalculatorId = 108, CalculatorSettingId = 1, CountryIso = "HN" },
                        new { CalculatorId = 109, CalculatorSettingId = 2, CountryIso = "HR" },
                        new { CalculatorId = 110, CalculatorSettingId = 1, CountryIso = "HT" },
                        new { CalculatorId = 111, CalculatorSettingId = 2, CountryIso = "HU" },
                        new { CalculatorId = 112, CalculatorSettingId = 1, CountryIso = "ID" },
                        new { CalculatorId = 114, CalculatorSettingId = 1, CountryIso = "IL" },
                        new { CalculatorId = 115, CalculatorSettingId = 2, CountryIso = "IM" },
                        new { CalculatorId = 116, CalculatorSettingId = 1, CountryIso = "IN" },
                        new { CalculatorId = 117, CalculatorSettingId = 1, CountryIso = "IO" },
                        new { CalculatorId = 118, CalculatorSettingId = 1, CountryIso = "IQ" },
                        new { CalculatorId = 119, CalculatorSettingId = 1, CountryIso = "IR" },
                        new { CalculatorId = 120, CalculatorSettingId = 2, CountryIso = "IS" },
                        new { CalculatorId = 121, CalculatorSettingId = 2, CountryIso = "IT" },
                        new { CalculatorId = 122, CalculatorSettingId = 2, CountryIso = "JE" },
                        new { CalculatorId = 123, CalculatorSettingId = 1, CountryIso = "JM" },
                        new { CalculatorId = 124, CalculatorSettingId = 1, CountryIso = "JO" },
                        new { CalculatorId = 125, CalculatorSettingId = 1, CountryIso = "JP" },
                        new { CalculatorId = 126, CalculatorSettingId = 1, CountryIso = "KE" },
                        new { CalculatorId = 127, CalculatorSettingId = 1, CountryIso = "KG" },
                        new { CalculatorId = 128, CalculatorSettingId = 1, CountryIso = "KH" },
                        new { CalculatorId = 129, CalculatorSettingId = 1, CountryIso = "KI" },
                        new { CalculatorId = 130, CalculatorSettingId = 1, CountryIso = "KM" },
                        new { CalculatorId = 131, CalculatorSettingId = 1, CountryIso = "KN" },
                        new { CalculatorId = 132, CalculatorSettingId = 1, CountryIso = "KP" },
                        new { CalculatorId = 133, CalculatorSettingId = 1, CountryIso = "KR" },
                        new { CalculatorId = 134, CalculatorSettingId = 1, CountryIso = "KW" },
                        new { CalculatorId = 135, CalculatorSettingId = 1, CountryIso = "KY" },
                        new { CalculatorId = 136, CalculatorSettingId = 1, CountryIso = "KZ" },
                        new { CalculatorId = 137, CalculatorSettingId = 1, CountryIso = "LA" },
                        new { CalculatorId = 138, CalculatorSettingId = 1, CountryIso = "LB" },
                        new { CalculatorId = 139, CalculatorSettingId = 1, CountryIso = "LC" },
                        new { CalculatorId = 140, CalculatorSettingId = 2, CountryIso = "LI" },
                        new { CalculatorId = 141, CalculatorSettingId = 1, CountryIso = "LK" },
                        new { CalculatorId = 142, CalculatorSettingId = 1, CountryIso = "LR" },
                        new { CalculatorId = 143, CalculatorSettingId = 1, CountryIso = "LS" },
                        new { CalculatorId = 144, CalculatorSettingId = 2, CountryIso = "LT" },
                        new { CalculatorId = 145, CalculatorSettingId = 2, CountryIso = "LU" },
                        new { CalculatorId = 146, CalculatorSettingId = 2, CountryIso = "LV" },
                        new { CalculatorId = 147, CalculatorSettingId = 1, CountryIso = "LY" },
                        new { CalculatorId = 148, CalculatorSettingId = 1, CountryIso = "MA" },
                        new { CalculatorId = 149, CalculatorSettingId = 2, CountryIso = "MC" },
                        new { CalculatorId = 150, CalculatorSettingId = 2, CountryIso = "MD" },
                        new { CalculatorId = 151, CalculatorSettingId = 2, CountryIso = "ME" },
                        new { CalculatorId = 152, CalculatorSettingId = 1, CountryIso = "MF" },
                        new { CalculatorId = 153, CalculatorSettingId = 1, CountryIso = "MG" },
                        new { CalculatorId = 154, CalculatorSettingId = 1, CountryIso = "MH" },
                        new { CalculatorId = 155, CalculatorSettingId = 2, CountryIso = "MK" },
                        new { CalculatorId = 156, CalculatorSettingId = 1, CountryIso = "ML" },
                        new { CalculatorId = 157, CalculatorSettingId = 1, CountryIso = "MM" },
                        new { CalculatorId = 158, CalculatorSettingId = 1, CountryIso = "MN" },
                        new { CalculatorId = 159, CalculatorSettingId = 1, CountryIso = "MO" },
                        new { CalculatorId = 160, CalculatorSettingId = 1, CountryIso = "MP" },
                        new { CalculatorId = 161, CalculatorSettingId = 1, CountryIso = "MQ" },
                        new { CalculatorId = 162, CalculatorSettingId = 1, CountryIso = "MR" },
                        new { CalculatorId = 163, CalculatorSettingId = 1, CountryIso = "MS" },
                        new { CalculatorId = 164, CalculatorSettingId = 2, CountryIso = "MT" },
                        new { CalculatorId = 165, CalculatorSettingId = 1, CountryIso = "MU" },
                        new { CalculatorId = 166, CalculatorSettingId = 1, CountryIso = "MV" },
                        new { CalculatorId = 167, CalculatorSettingId = 1, CountryIso = "MW" },
                        new { CalculatorId = 168, CalculatorSettingId = 1, CountryIso = "MX" },
                        new { CalculatorId = 169, CalculatorSettingId = 1, CountryIso = "MY" },
                        new { CalculatorId = 170, CalculatorSettingId = 1, CountryIso = "MZ" },
                        new { CalculatorId = 171, CalculatorSettingId = 1, CountryIso = "NA" },
                        new { CalculatorId = 172, CalculatorSettingId = 1, CountryIso = "NC" },
                        new { CalculatorId = 173, CalculatorSettingId = 1, CountryIso = "NE" },
                        new { CalculatorId = 174, CalculatorSettingId = 1, CountryIso = "NF" },
                        new { CalculatorId = 175, CalculatorSettingId = 1, CountryIso = "NG" },
                        new { CalculatorId = 176, CalculatorSettingId = 1, CountryIso = "NI" },
                        new { CalculatorId = 177, CalculatorSettingId = 2, CountryIso = "NL" },
                        new { CalculatorId = 178, CalculatorSettingId = 2, CountryIso = "NO" },
                        new { CalculatorId = 179, CalculatorSettingId = 1, CountryIso = "NP" },
                        new { CalculatorId = 180, CalculatorSettingId = 1, CountryIso = "NR" },
                        new { CalculatorId = 181, CalculatorSettingId = 1, CountryIso = "NU" },
                        new { CalculatorId = 182, CalculatorSettingId = 1, CountryIso = "NZ" },
                        new { CalculatorId = 183, CalculatorSettingId = 1, CountryIso = "OM" },
                        new { CalculatorId = 184, CalculatorSettingId = 1, CountryIso = "PA" },
                        new { CalculatorId = 185, CalculatorSettingId = 1, CountryIso = "PE" },
                        new { CalculatorId = 186, CalculatorSettingId = 1, CountryIso = "PF" },
                        new { CalculatorId = 187, CalculatorSettingId = 1, CountryIso = "PG" },
                        new { CalculatorId = 188, CalculatorSettingId = 1, CountryIso = "PH" },
                        new { CalculatorId = 189, CalculatorSettingId = 1, CountryIso = "PK" },
                        new { CalculatorId = 190, CalculatorSettingId = 2, CountryIso = "PL" },
                        new { CalculatorId = 191, CalculatorSettingId = 1, CountryIso = "PM" },
                        new { CalculatorId = 192, CalculatorSettingId = 1, CountryIso = "PN" },
                        new { CalculatorId = 193, CalculatorSettingId = 1, CountryIso = "PR" },
                        new { CalculatorId = 194, CalculatorSettingId = 1, CountryIso = "PS" },
                        new { CalculatorId = 195, CalculatorSettingId = 1, CountryIso = "PT" },
                        new { CalculatorId = 196, CalculatorSettingId = 1, CountryIso = "PW" },
                        new { CalculatorId = 197, CalculatorSettingId = 1, CountryIso = "PY" },
                        new { CalculatorId = 198, CalculatorSettingId = 1, CountryIso = "QA" },
                        new { CalculatorId = 199, CalculatorSettingId = 1, CountryIso = "RE" },
                        new { CalculatorId = 200, CalculatorSettingId = 2, CountryIso = "RO" },
                        new { CalculatorId = 201, CalculatorSettingId = 2, CountryIso = "RS" },
                        new { CalculatorId = 202, CalculatorSettingId = 1, CountryIso = "RU" },
                        new { CalculatorId = 203, CalculatorSettingId = 1, CountryIso = "RW" },
                        new { CalculatorId = 204, CalculatorSettingId = 1, CountryIso = "SA" },
                        new { CalculatorId = 205, CalculatorSettingId = 1, CountryIso = "SB" },
                        new { CalculatorId = 206, CalculatorSettingId = 1, CountryIso = "SC" },
                        new { CalculatorId = 207, CalculatorSettingId = 1, CountryIso = "SD" },
                        new { CalculatorId = 208, CalculatorSettingId = 2, CountryIso = "SE" },
                        new { CalculatorId = 209, CalculatorSettingId = 1, CountryIso = "SG" },
                        new { CalculatorId = 210, CalculatorSettingId = 1, CountryIso = "SH" },
                        new { CalculatorId = 211, CalculatorSettingId = 2, CountryIso = "SI" },
                        new { CalculatorId = 212, CalculatorSettingId = 1, CountryIso = "SJ" },
                        new { CalculatorId = 213, CalculatorSettingId = 2, CountryIso = "SK" },
                        new { CalculatorId = 214, CalculatorSettingId = 1, CountryIso = "SL" },
                        new { CalculatorId = 215, CalculatorSettingId = 2, CountryIso = "SM" },
                        new { CalculatorId = 216, CalculatorSettingId = 1, CountryIso = "SN" },
                        new { CalculatorId = 217, CalculatorSettingId = 1, CountryIso = "SO" },
                        new { CalculatorId = 218, CalculatorSettingId = 1, CountryIso = "SR" },
                        new { CalculatorId = 219, CalculatorSettingId = 1, CountryIso = "SS" },
                        new { CalculatorId = 220, CalculatorSettingId = 1, CountryIso = "ST" },
                        new { CalculatorId = 221, CalculatorSettingId = 1, CountryIso = "SV" },
                        new { CalculatorId = 222, CalculatorSettingId = 1, CountryIso = "SX" },
                        new { CalculatorId = 223, CalculatorSettingId = 1, CountryIso = "SY" },
                        new { CalculatorId = 224, CalculatorSettingId = 1, CountryIso = "SZ" },
                        new { CalculatorId = 225, CalculatorSettingId = 1, CountryIso = "TC" },
                        new { CalculatorId = 226, CalculatorSettingId = 1, CountryIso = "TD" },
                        new { CalculatorId = 227, CalculatorSettingId = 1, CountryIso = "TF" },
                        new { CalculatorId = 228, CalculatorSettingId = 1, CountryIso = "TG" },
                        new { CalculatorId = 229, CalculatorSettingId = 1, CountryIso = "TH" },
                        new { CalculatorId = 230, CalculatorSettingId = 1, CountryIso = "TJ" },
                        new { CalculatorId = 231, CalculatorSettingId = 1, CountryIso = "TK" },
                        new { CalculatorId = 232, CalculatorSettingId = 1, CountryIso = "TL" },
                        new { CalculatorId = 233, CalculatorSettingId = 1, CountryIso = "TM" },
                        new { CalculatorId = 234, CalculatorSettingId = 1, CountryIso = "TN" },
                        new { CalculatorId = 235, CalculatorSettingId = 1, CountryIso = "TO" },
                        new { CalculatorId = 236, CalculatorSettingId = 1, CountryIso = "TR" },
                        new { CalculatorId = 237, CalculatorSettingId = 1, CountryIso = "TT" },
                        new { CalculatorId = 238, CalculatorSettingId = 1, CountryIso = "TV" },
                        new { CalculatorId = 239, CalculatorSettingId = 1, CountryIso = "TW" },
                        new { CalculatorId = 240, CalculatorSettingId = 1, CountryIso = "TZ" },
                        new { CalculatorId = 241, CalculatorSettingId = 2, CountryIso = "UA" },
                        new { CalculatorId = 242, CalculatorSettingId = 1, CountryIso = "UG" },
                        new { CalculatorId = 243, CalculatorSettingId = 1, CountryIso = "UM" },
                        new { CalculatorId = 244, CalculatorSettingId = 1, CountryIso = "US" },
                        new { CalculatorId = 245, CalculatorSettingId = 1, CountryIso = "UY" },
                        new { CalculatorId = 246, CalculatorSettingId = 1, CountryIso = "UZ" },
                        new { CalculatorId = 247, CalculatorSettingId = 2, CountryIso = "VA" },
                        new { CalculatorId = 248, CalculatorSettingId = 1, CountryIso = "VC" },
                        new { CalculatorId = 249, CalculatorSettingId = 1, CountryIso = "VE" },
                        new { CalculatorId = 250, CalculatorSettingId = 1, CountryIso = "VG" },
                        new { CalculatorId = 251, CalculatorSettingId = 1, CountryIso = "VI" },
                        new { CalculatorId = 252, CalculatorSettingId = 1, CountryIso = "VN" },
                        new { CalculatorId = 253, CalculatorSettingId = 1, CountryIso = "VU" },
                        new { CalculatorId = 254, CalculatorSettingId = 1, CountryIso = "WF" },
                        new { CalculatorId = 255, CalculatorSettingId = 1, CountryIso = "WS" },
                        new { CalculatorId = 256, CalculatorSettingId = 1, CountryIso = "YE" },
                        new { CalculatorId = 257, CalculatorSettingId = 1, CountryIso = "YT" },
                        new { CalculatorId = 258, CalculatorSettingId = 1, CountryIso = "ZA" },
                        new { CalculatorId = 259, CalculatorSettingId = 1, CountryIso = "ZM" },
                        new { CalculatorId = 260, CalculatorSettingId = 1, CountryIso = "ZW" }
                    );
                });

            modelBuilder.Entity("dt.Calculator.Model.Domain.Calculator.CalculatorSetting", b =>
                {
                    b.Property<int>("CalculatorSettingId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryIso")
                        .HasMaxLength(2);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CreationUser")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("CurrencyIso")
                        .HasMaxLength(3);

                    b.Property<decimal>("DefaultOtherTaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("DutyApplicable");

                    b.Property<int>("DutyCalculationMethod");

                    b.Property<decimal>("DutyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("DutyRefundable");

                    b.Property<decimal>("DutyThreshold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DutyThresholdForGifts")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("FeeRefundable");

                    b.Property<decimal>("FeeThreshold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("FeesApplicable");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<string>("LastUpdateUser")
                        .HasMaxLength(250);

                    b.Property<decimal>("MaximumDutyPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumOtherTaxPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumTaxPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumDutyPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumOtherTaxPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumTaxPayable")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name");

                    b.Property<bool>("OtherTaxApplicable");

                    b.Property<int>("OtherTaxCalculationMethod");

                    b.Property<bool>("OtherTaxIncludesDuty");

                    b.Property<bool>("OtherTaxRefundable");

                    b.Property<decimal>("OtherTaxThreshold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TaxApplicable");

                    b.Property<int>("TaxCalculationMethod");

                    b.Property<bool>("TaxIncludesDuty");

                    b.Property<bool>("TaxIncludesFees");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("TaxRefundable");

                    b.Property<decimal>("TaxThreshold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxThresholdForGifts")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CalculatorSettingId");

                    b.HasIndex("CountryIso");

                    b.HasIndex("CurrencyIso");

                    b.ToTable("Settings","Calculator");

                    b.HasData(
                        new { CalculatorSettingId = 1, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 78, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "USD", DefaultOtherTaxRate = 0m, DutyApplicable = false, DutyCalculationMethod = 0, DutyRate = 0m, DutyRefundable = false, DutyThreshold = 0m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "Default Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = false, TaxCalculationMethod = 0, TaxIncludesDuty = false, TaxIncludesFees = false, TaxRate = 0m, TaxRefundable = false, TaxThreshold = 0m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 2, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 78, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "EUR", DefaultOtherTaxRate = 0m, DutyApplicable = false, DutyCalculationMethod = 0, DutyRate = 0m, DutyRefundable = false, DutyThreshold = 0m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "EU Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = false, TaxCalculationMethod = 0, TaxIncludesDuty = false, TaxIncludesFees = false, TaxRate = 0m, TaxRefundable = false, TaxThreshold = 0m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 3, CountryIso = "GB", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 78, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "GBP", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 2, DutyRate = 0.05m, DutyRefundable = false, DutyThreshold = 135.00m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "UK Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = true, TaxCalculationMethod = 2, TaxIncludesDuty = true, TaxIncludesFees = false, TaxRate = 0.20m, TaxRefundable = false, TaxThreshold = 15m, TaxThresholdForGifts = 39m },
                        new { CalculatorSettingId = 4, CountryIso = "AU", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 79, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "AUD", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 2, DutyRate = 0.1m, DutyRefundable = false, DutyThreshold = 1000.00m, DutyThresholdForGifts = 0m, Fee = 83m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 1000m, FeesApplicable = true, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "Oz Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = true, TaxCalculationMethod = 0, TaxIncludesDuty = true, TaxIncludesFees = false, TaxRate = 0.10m, TaxRefundable = false, TaxThreshold = 0m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 5, CountryIso = "IE", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 79, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "EUR", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 2, DutyRate = 0.12m, DutyRefundable = false, DutyThreshold = 150m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 6m, Name = "Ireland Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = true, TaxCalculationMethod = 0, TaxIncludesDuty = true, TaxIncludesFees = false, TaxRate = 0.23m, TaxRefundable = false, TaxThreshold = 22m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 6, CountryIso = "CA", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 79, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "CAD", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 1, DutyRate = 0.19m, DutyRefundable = false, DutyThreshold = 20m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "Canadian Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = true, TaxCalculationMethod = 0, TaxIncludesDuty = true, TaxIncludesFees = false, TaxRate = 0.113m, TaxRefundable = false, TaxThreshold = 20m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 7, CountryIso = "CA", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 79, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "AED", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 2, DutyRate = 0.0461m, DutyRefundable = false, DutyThreshold = 1000m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "United Arab Emirates", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = false, TaxCalculationMethod = 0, TaxIncludesDuty = false, TaxIncludesFees = false, TaxRate = 0m, TaxRefundable = false, TaxThreshold = 0m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 8, CountryIso = "BH", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 79, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "BHD", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 2, DutyRate = 0.05m, DutyRefundable = false, DutyThreshold = 113m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "Bahrain Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = false, TaxCalculationMethod = 0, TaxIncludesDuty = false, TaxIncludesFees = false, TaxRate = 0m, TaxRefundable = false, TaxThreshold = 0m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 9, CountryIso = "CH", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 79, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "CHF", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 2, DutyRate = 0.16m, DutyRefundable = false, DutyThreshold = 113m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "Switzerland Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = true, TaxCalculationMethod = 0, TaxIncludesDuty = true, TaxIncludesFees = false, TaxRate = 0.077m, TaxRefundable = false, TaxThreshold = 300m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 10, CountryIso = "CN", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 79, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "CNY", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 2, DutyRate = 0.02m, DutyRefundable = false, DutyThreshold = 50m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "China Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = true, TaxCalculationMethod = 0, TaxIncludesDuty = true, TaxIncludesFees = false, TaxRate = 0.17m, TaxRefundable = false, TaxThreshold = 50m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 11, CountryIso = "CL", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 79, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "CLP", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 2, DutyRate = 0.06m, DutyRefundable = false, DutyThreshold = 30m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "Chile Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = true, TaxCalculationMethod = 0, TaxIncludesDuty = true, TaxIncludesFees = false, TaxRate = 0.19m, TaxRefundable = false, TaxThreshold = 0m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 12, CountryIso = "HK", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 79, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "HKD", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 2, DutyRate = 0.06m, DutyRefundable = false, DutyThreshold = 30m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "Hong Kong Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = true, TaxCalculationMethod = 0, TaxIncludesDuty = true, TaxIncludesFees = false, TaxRate = 0.19m, TaxRefundable = false, TaxThreshold = 0m, TaxThresholdForGifts = 0m },
                        new { CalculatorSettingId = 13, CountryIso = "HK", CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 79, DateTimeKind.Local), CreationUser = "Seed", CurrencyIso = "EUR", DefaultOtherTaxRate = 0m, DutyApplicable = true, DutyCalculationMethod = 2, DutyRate = 0.06m, DutyRefundable = false, DutyThreshold = 30m, DutyThresholdForGifts = 0m, Fee = 0m, FeeRate = 0m, FeeRefundable = false, FeeThreshold = 0m, FeesApplicable = false, MaximumDutyPayable = 0m, MaximumOtherTaxPayable = 0m, MaximumTaxPayable = 0m, MinimumDutyPayable = 0m, MinimumOtherTaxPayable = 0m, MinimumTaxPayable = 0m, Name = "Andora Calculator", OtherTaxApplicable = false, OtherTaxCalculationMethod = 0, OtherTaxIncludesDuty = false, OtherTaxRefundable = false, OtherTaxThreshold = 0m, TaxApplicable = true, TaxCalculationMethod = 0, TaxIncludesDuty = true, TaxIncludesFees = false, TaxRate = 0.19m, TaxRefundable = false, TaxThreshold = 0m, TaxThresholdForGifts = 0m }
                    );
                });

            modelBuilder.Entity("dt.Calculator.Model.Domain.Lookup.CanadianProvincialTaxRate", b =>
                {
                    b.Property<int>("CanadianProvincialTaxRateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("GstRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HstRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PstRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasMaxLength(2);

                    b.Property<string>("StateName");

                    b.HasKey("CanadianProvincialTaxRateId");

                    b.ToTable("CanadianProvincialTaxRates","Lookup");

                    b.HasData(
                        new { CanadianProvincialTaxRateId = 1, GstRate = 0m, HstRate = 0.05m, PstRate = 0.08m, StateCode = "ON", StateName = "Ontario" },
                        new { CanadianProvincialTaxRateId = 2, GstRate = 0.05m, HstRate = 0m, PstRate = 0.07m, StateCode = "BC", StateName = "British Columbia" },
                        new { CanadianProvincialTaxRateId = 3, GstRate = 0.05m, HstRate = 0m, PstRate = 0.08m, StateCode = "MB", StateName = "Manitoba" },
                        new { CanadianProvincialTaxRateId = 4, GstRate = 0.05m, HstRate = 0m, PstRate = 0m, StateCode = "AB", StateName = "Alberta" },
                        new { CanadianProvincialTaxRateId = 5, GstRate = 0m, HstRate = 0.05m, PstRate = 0.1m, StateCode = "NB", StateName = "New Brunswick" },
                        new { CanadianProvincialTaxRateId = 6, GstRate = 0m, HstRate = 0.05m, PstRate = 0.1m, StateCode = "NL", StateName = "Newfoundland" },
                        new { CanadianProvincialTaxRateId = 7, GstRate = 0.05m, HstRate = 0m, PstRate = 0m, StateCode = "NT", StateName = "Northwest Territory" },
                        new { CanadianProvincialTaxRateId = 8, GstRate = 0m, HstRate = 0.05m, PstRate = 0.1m, StateCode = "NS", StateName = "Nova Scotia" },
                        new { CanadianProvincialTaxRateId = 9, GstRate = 0.05m, HstRate = 0m, PstRate = 0m, StateCode = "NU", StateName = "Nunavut" },
                        new { CanadianProvincialTaxRateId = 10, GstRate = 0.05m, HstRate = 0m, PstRate = 0.01m, StateCode = "PE", StateName = "Prince Edward Island" },
                        new { CanadianProvincialTaxRateId = 11, GstRate = 0.05m, HstRate = 0m, PstRate = 0.0998m, StateCode = "QC", StateName = "Quebec" },
                        new { CanadianProvincialTaxRateId = 12, GstRate = 0.05m, HstRate = 0m, PstRate = 0.06m, StateCode = "SK", StateName = "Saskatchewanq" },
                        new { CanadianProvincialTaxRateId = 13, GstRate = 0.05m, HstRate = 0m, PstRate = 0m, StateCode = "YT", StateName = "Yukon" }
                    );
                });

            modelBuilder.Entity("dt.Calculator.Model.Domain.Lookup.Country", b =>
                {
                    b.Property<string>("Iso")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(2);

                    b.Property<string>("CountryName");

                    b.Property<string>("CountryPrintableName");

                    b.Property<string>("Iso3");

                    b.Property<short?>("NumCode");

                    b.Property<bool>("PostalCodeNeeded");

                    b.Property<string>("PrimaryLanguage");

                    b.Property<int?>("RegionId");

                    b.HasKey("Iso");

                    b.HasIndex("Iso")
                        .IsUnique();

                    b.ToTable("Countries","Lookup");

                    b.HasData(
                        new { Iso = "AD", CountryName = "ANDORRA", CountryPrintableName = "Andorra", Iso3 = "AND", NumCode = (short)20, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "AE", CountryName = "UNITED ARAB EMIRATES", CountryPrintableName = "United Arab Emirates", Iso3 = "ARE", NumCode = (short)784, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AF", CountryName = "AFGHANISTAN", CountryPrintableName = "Afghanistan", Iso3 = "AFG", NumCode = (short)4, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AG", CountryName = "ANTIGUA AND BARBUDA", CountryPrintableName = "Antigua and Barbuda", Iso3 = "ATG", NumCode = (short)28, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AI", CountryName = "ANGUILLA", CountryPrintableName = "Anguilla", Iso3 = "AIA", NumCode = (short)660, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AL", CountryName = "ALBANIA", CountryPrintableName = "Albania", Iso3 = "ALB", NumCode = (short)8, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "AM", CountryName = "ARMENIA", CountryPrintableName = "Armenia", Iso3 = "ARM", NumCode = (short)51, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AN", CountryName = "NETHERLANDS ANTILLES", CountryPrintableName = "Netherlands Antilles", Iso3 = "ANT", NumCode = (short)530, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AO", CountryName = "ANGOLA", CountryPrintableName = "Angola", Iso3 = "AGO", NumCode = (short)24, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AQ", CountryName = "ANTARCTICA", CountryPrintableName = "Antarctica", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AR", CountryName = "ARGENTINA", CountryPrintableName = "Argentina", Iso3 = "ARG", NumCode = (short)32, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AS", CountryName = "AMERICAN SAMOA", CountryPrintableName = "American Samoa", Iso3 = "ASM", NumCode = (short)16, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AT", CountryName = "AUSTRIA", CountryPrintableName = "Austria", Iso3 = "AUT", NumCode = (short)40, PostalCodeNeeded = false, PrimaryLanguage = "de", RegionId = 2 },
                        new { Iso = "AU", CountryName = "AUSTRALIA", CountryPrintableName = "Australia", Iso3 = "AUS", NumCode = (short)36, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 4 },
                        new { Iso = "AW", CountryName = "ARUBA", CountryPrintableName = "Aruba", Iso3 = "ABW", NumCode = (short)533, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "AX", CountryName = "ALAND ISLANDS", CountryPrintableName = "Aland Islands", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "AZ", CountryName = "AZERBAIJAN", CountryPrintableName = "Azerbaijan", Iso3 = "AZE", NumCode = (short)31, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BA", CountryName = "BOSNIA AND HERZEGOVINA", CountryPrintableName = "Bosnia and Herzegovina", Iso3 = "BIH", NumCode = (short)70, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "BB", CountryName = "BARBADOS", CountryPrintableName = "Barbados", Iso3 = "BRB", NumCode = (short)52, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BD", CountryName = "BANGLADESH", CountryPrintableName = "Bangladesh", Iso3 = "BGD", NumCode = (short)50, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BE", CountryName = "BELGIUM", CountryPrintableName = "Belgium", Iso3 = "BEL", NumCode = (short)56, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "BF", CountryName = "BURKINA FASO", CountryPrintableName = "Burkina Faso", Iso3 = "BFA", NumCode = (short)854, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BG", CountryName = "BULGARIA", CountryPrintableName = "Bulgaria", Iso3 = "BGR", NumCode = (short)100, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "BH", CountryName = "BAHRAIN", CountryPrintableName = "Bahrain", Iso3 = "BHR", NumCode = (short)48, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BI", CountryName = "BURUNDI", CountryPrintableName = "Burundi", Iso3 = "BDI", NumCode = (short)108, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BJ", CountryName = "BENIN", CountryPrintableName = "Benin", Iso3 = "BEN", NumCode = (short)204, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BL", CountryName = "SAINT BARTHÉLEMY", CountryPrintableName = "Saint Barthelemy", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BM", CountryName = "BERMUDA", CountryPrintableName = "Bermuda", Iso3 = "BMU", NumCode = (short)60, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BN", CountryName = "BRUNEI DARUSSALAM", CountryPrintableName = "Brunei Darussalam", Iso3 = "BRN", NumCode = (short)96, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BO", CountryName = "BOLIVIA", CountryPrintableName = "Bolivia", Iso3 = "BOL", NumCode = (short)68, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BQ", CountryName = "BONAIRE, SINT EUSTATIUS AND SABA", CountryPrintableName = "Bonaire, Sint Eustatius and Saba", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BR", CountryName = "BRAZIL", CountryPrintableName = "Brazil", Iso3 = "BRA", NumCode = (short)76, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BS", CountryName = "BAHAMAS", CountryPrintableName = "Bahamas", Iso3 = "BHS", NumCode = (short)44, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BT", CountryName = "BHUTAN", CountryPrintableName = "Bhutan", Iso3 = "BTN", NumCode = (short)64, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BV", CountryName = "BOUVET ISLAND", CountryPrintableName = "Bouvet Island", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BW", CountryName = "BOTSWANA", CountryPrintableName = "Botswana", Iso3 = "BWA", NumCode = (short)72, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "BY", CountryName = "BELARUS", CountryPrintableName = "Belarus", Iso3 = "BLR", NumCode = (short)112, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "BZ", CountryName = "BELIZE", CountryPrintableName = "Belize", Iso3 = "BLZ", NumCode = (short)84, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CA", CountryName = "CANADA", CountryPrintableName = "Canada", Iso3 = "CAN", NumCode = (short)124, PostalCodeNeeded = true, PrimaryLanguage = "en", RegionId = 3 },
                        new { Iso = "CC", CountryName = "COCOS (KEELING) ISLANDS", CountryPrintableName = "Cocos (Keeling) Islands", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CD", CountryName = "CONGO, THE DEMOCRATIC REPUBLIC OF THE", CountryPrintableName = "Congo, the Democratic Republic of the", Iso3 = "COD", NumCode = (short)180, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CF", CountryName = "CENTRAL AFRICAN REPUBLIC", CountryPrintableName = "Central African Republic", Iso3 = "CAF", NumCode = (short)140, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CG", CountryName = "CONGO", CountryPrintableName = "Congo", Iso3 = "COG", NumCode = (short)178, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CH", CountryName = "SWITZERLAND", CountryPrintableName = "Switzerland", Iso3 = "CHE", NumCode = (short)756, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "CI", CountryName = "COTE D'IVOIRE", CountryPrintableName = "Cote D'Ivoire", Iso3 = "CIV", NumCode = (short)384, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CK", CountryName = "COOK ISLANDS", CountryPrintableName = "Cook Islands", Iso3 = "COK", NumCode = (short)184, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CL", CountryName = "CHILE", CountryPrintableName = "Chile", Iso3 = "CHL", NumCode = (short)152, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CM", CountryName = "CAMEROON", CountryPrintableName = "Cameroon", Iso3 = "CMR", NumCode = (short)120, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CN", CountryName = "CHINA", CountryPrintableName = "China", Iso3 = "CHN", NumCode = (short)156, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CO", CountryName = "COLOMBIA", CountryPrintableName = "Colombia", Iso3 = "COL", NumCode = (short)170, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CR", CountryName = "COSTA RICA", CountryPrintableName = "Costa Rica", Iso3 = "CRI", NumCode = (short)188, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CS", CountryName = "SERBIA AND MONTENEGRO", CountryPrintableName = "Serbia and Montenegro", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CU", CountryName = "CUBA", CountryPrintableName = "Cuba", Iso3 = "CUB", NumCode = (short)192, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CV", CountryName = "CAPE VERDE", CountryPrintableName = "Cape Verde", Iso3 = "CPV", NumCode = (short)132, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CW", CountryName = "CURACAO", CountryPrintableName = "Curacao", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CX", CountryName = "CHRISTMAS ISLAND", CountryPrintableName = "Christmas Island", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "CY", CountryName = "CYPRUS", CountryPrintableName = "Cyprus", Iso3 = "CYP", NumCode = (short)196, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "CZ", CountryName = "CZECH REPUBLIC", CountryPrintableName = "Czech Republic", Iso3 = "CZE", NumCode = (short)203, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "DE", CountryName = "GERMANY", CountryPrintableName = "Germany", Iso3 = "DEU", NumCode = (short)276, PostalCodeNeeded = false, PrimaryLanguage = "de", RegionId = 2 },
                        new { Iso = "DJ", CountryName = "DJIBOUTI", CountryPrintableName = "Djibouti", Iso3 = "DJI", NumCode = (short)262, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "DK", CountryName = "DENMARK", CountryPrintableName = "Denmark", Iso3 = "DNK", NumCode = (short)208, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "DM", CountryName = "DOMINICA", CountryPrintableName = "Dominica", Iso3 = "DMA", NumCode = (short)212, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "DO", CountryName = "DOMINICAN REPUBLIC", CountryPrintableName = "Dominican Republic", Iso3 = "DOM", NumCode = (short)214, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "DZ", CountryName = "ALGERIA", CountryPrintableName = "Algeria", Iso3 = "DZA", NumCode = (short)12, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "EC", CountryName = "ECUADOR", CountryPrintableName = "Ecuador", Iso3 = "ECU", NumCode = (short)218, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "EE", CountryName = "ESTONIA", CountryPrintableName = "Estonia", Iso3 = "EST", NumCode = (short)233, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "EG", CountryName = "EGYPT", CountryPrintableName = "Egypt", Iso3 = "EGY", NumCode = (short)818, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "EH", CountryName = "WESTERN SAHARA", CountryPrintableName = "Western Sahara", Iso3 = "ESH", NumCode = (short)732, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "ER", CountryName = "ERITREA", CountryPrintableName = "Eritrea", Iso3 = "ERI", NumCode = (short)232, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "ES", CountryName = "SPAIN", CountryPrintableName = "Spain", Iso3 = "ESP", NumCode = (short)724, PostalCodeNeeded = false, PrimaryLanguage = "es", RegionId = 2 },
                        new { Iso = "ET", CountryName = "ETHIOPIA", CountryPrintableName = "Ethiopia", Iso3 = "ETH", NumCode = (short)231, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "FI", CountryName = "FINLAND", CountryPrintableName = "Finland", Iso3 = "FIN", NumCode = (short)246, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "FJ", CountryName = "FIJI", CountryPrintableName = "Fiji", Iso3 = "FJI", NumCode = (short)242, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "FK", CountryName = "FALKLAND ISLANDS (MALVINAS)", CountryPrintableName = "Falkland Islands (Malvinas)", Iso3 = "FLK", NumCode = (short)238, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "FM", CountryName = "MICRONESIA, FEDERATED STATES OF", CountryPrintableName = "Micronesia, Federated States of", Iso3 = "FSM", NumCode = (short)583, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "FO", CountryName = "FAROE ISLANDS", CountryPrintableName = "Faroe Islands", Iso3 = "FRO", NumCode = (short)234, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "FR", CountryName = "FRANCE", CountryPrintableName = "France", Iso3 = "FRA", NumCode = (short)250, PostalCodeNeeded = false, PrimaryLanguage = "fr", RegionId = 2 },
                        new { Iso = "GA", CountryName = "GABON", CountryPrintableName = "Gabon", Iso3 = "GAB", NumCode = (short)266, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GB", CountryName = "UNITED KINGDOM", CountryPrintableName = "United Kingdom", Iso3 = "GBR", NumCode = (short)826, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "GD", CountryName = "GRENADA", CountryPrintableName = "Grenada", Iso3 = "GRD", NumCode = (short)308, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GE", CountryName = "GEORGIA", CountryPrintableName = "Georgia", Iso3 = "GEO", NumCode = (short)268, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GF", CountryName = "FRENCH GUIANA", CountryPrintableName = "French Guiana", Iso3 = "GUF", NumCode = (short)254, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GG", CountryName = "GUERNSEY", CountryPrintableName = "Guernsey", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "GH", CountryName = "GHANA", CountryPrintableName = "Ghana", Iso3 = "GHA", NumCode = (short)288, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GI", CountryName = "GIBRALTAR", CountryPrintableName = "Gibraltar", Iso3 = "GIB", NumCode = (short)292, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "GL", CountryName = "GREENLAND", CountryPrintableName = "Greenland", Iso3 = "GRL", NumCode = (short)304, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GM", CountryName = "GAMBIA", CountryPrintableName = "Gambia", Iso3 = "GMB", NumCode = (short)270, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GN", CountryName = "GUINEA", CountryPrintableName = "Guinea", Iso3 = "GIN", NumCode = (short)324, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GP", CountryName = "GUADELOUPE", CountryPrintableName = "Guadeloupe", Iso3 = "GLP", NumCode = (short)312, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GQ", CountryName = "EQUATORIAL GUINEA", CountryPrintableName = "Equatorial Guinea", Iso3 = "GNQ", NumCode = (short)226, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GR", CountryName = "GREECE", CountryPrintableName = "Greece", Iso3 = "GRC", NumCode = (short)300, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "GS", CountryName = "SOUTH GEORGIA AND THE SOUTH SANDWICH ISLANDS", CountryPrintableName = "South Georgia and the South Sandwich Islands", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GT", CountryName = "GUATEMALA", CountryPrintableName = "Guatemala", Iso3 = "GTM", NumCode = (short)320, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GU", CountryName = "GUAM", CountryPrintableName = "Guam", Iso3 = "GUM", NumCode = (short)316, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GW", CountryName = "GUINEA-BISSAU", CountryPrintableName = "Guinea-Bissau", Iso3 = "GNB", NumCode = (short)624, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "GY", CountryName = "GUYANA", CountryPrintableName = "Guyana", Iso3 = "GUY", NumCode = (short)328, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "HK", CountryName = "HONG KONG", CountryPrintableName = "Hong Kong", Iso3 = "HKG", NumCode = (short)344, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "HM", CountryName = "HEARD ISLAND AND MCDONALD ISLANDS", CountryPrintableName = "Heard Island and Mcdonald Islands", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "HN", CountryName = "HONDURAS", CountryPrintableName = "Honduras", Iso3 = "HND", NumCode = (short)340, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "HR", CountryName = "CROATIA", CountryPrintableName = "Croatia", Iso3 = "HRV", NumCode = (short)191, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "HT", CountryName = "HAITI", CountryPrintableName = "Haiti", Iso3 = "HTI", NumCode = (short)332, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "HU", CountryName = "HUNGARY", CountryPrintableName = "Hungary", Iso3 = "HUN", NumCode = (short)348, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "ID", CountryName = "INDONESIA", CountryPrintableName = "Indonesia", Iso3 = "IDN", NumCode = (short)360, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "IE", CountryName = "IRELAND", CountryPrintableName = "Ireland", Iso3 = "IRL", NumCode = (short)372, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "IL", CountryName = "ISRAEL", CountryPrintableName = "Israel", Iso3 = "ISR", NumCode = (short)376, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "IM", CountryName = "ISLE OF MAN", CountryPrintableName = "Isle of Man", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "IN", CountryName = "INDIA", CountryPrintableName = "India", Iso3 = "IND", NumCode = (short)356, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "IO", CountryName = "BRITISH INDIAN OCEAN TERRITORY", CountryPrintableName = "British Indian Ocean Territory", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "IQ", CountryName = "IRAQ", CountryPrintableName = "Iraq", Iso3 = "IRQ", NumCode = (short)368, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "IR", CountryName = "IRAN, ISLAMIC REPUBLIC OF", CountryPrintableName = "Iran, Islamic Republic of", Iso3 = "IRN", NumCode = (short)364, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "IS", CountryName = "ICELAND", CountryPrintableName = "Iceland", Iso3 = "ISL", NumCode = (short)352, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "IT", CountryName = "ITALY", CountryPrintableName = "Italy", Iso3 = "ITA", NumCode = (short)380, PostalCodeNeeded = false, PrimaryLanguage = "it", RegionId = 2 },
                        new { Iso = "JE", CountryName = "JERSEY", CountryPrintableName = "Jersey", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "JM", CountryName = "JAMAICA", CountryPrintableName = "Jamaica", Iso3 = "JAM", NumCode = (short)388, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "JO", CountryName = "JORDAN", CountryPrintableName = "Jordan", Iso3 = "JOR", NumCode = (short)400, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "JP", CountryName = "JAPAN", CountryPrintableName = "Japan", Iso3 = "JPN", NumCode = (short)392, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KE", CountryName = "KENYA", CountryPrintableName = "Kenya", Iso3 = "KEN", NumCode = (short)404, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KG", CountryName = "KYRGYZSTAN", CountryPrintableName = "Kyrgyzstan", Iso3 = "KGZ", NumCode = (short)417, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KH", CountryName = "CAMBODIA", CountryPrintableName = "Cambodia", Iso3 = "KHM", NumCode = (short)116, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KI", CountryName = "KIRIBATI", CountryPrintableName = "Kiribati", Iso3 = "KIR", NumCode = (short)296, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KM", CountryName = "COMOROS", CountryPrintableName = "Comoros", Iso3 = "COM", NumCode = (short)174, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KN", CountryName = "SAINT KITTS AND NEVIS", CountryPrintableName = "Saint Kitts and Nevis", Iso3 = "KNA", NumCode = (short)659, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KP", CountryName = "KOREA, DEMOCRATIC PEOPLE'S REPUBLIC OF", CountryPrintableName = "Korea, Democratic People's Republic of", Iso3 = "PRK", NumCode = (short)408, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KR", CountryName = "KOREA, REPUBLIC OF", CountryPrintableName = "Korea, Republic of", Iso3 = "KOR", NumCode = (short)410, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KW", CountryName = "KUWAIT", CountryPrintableName = "Kuwait", Iso3 = "KWT", NumCode = (short)414, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KY", CountryName = "CAYMAN ISLANDS", CountryPrintableName = "Cayman Islands", Iso3 = "CYM", NumCode = (short)136, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "KZ", CountryName = "KAZAKHSTAN", CountryPrintableName = "Kazakhstan", Iso3 = "KAZ", NumCode = (short)398, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "LA", CountryName = "LAO PEOPLE'S DEMOCRATIC REPUBLIC", CountryPrintableName = "Lao People's Democratic Republic", Iso3 = "LAO", NumCode = (short)418, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "LB", CountryName = "LEBANON", CountryPrintableName = "Lebanon", Iso3 = "LBN", NumCode = (short)422, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "LC", CountryName = "SAINT LUCIA", CountryPrintableName = "Saint Lucia", Iso3 = "LCA", NumCode = (short)662, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "LI", CountryName = "LIECHTENSTEIN", CountryPrintableName = "Liechtenstein", Iso3 = "LIE", NumCode = (short)438, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "LK", CountryName = "SRI LANKA", CountryPrintableName = "Sri Lanka", Iso3 = "LKA", NumCode = (short)144, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "LR", CountryName = "LIBERIA", CountryPrintableName = "Liberia", Iso3 = "LBR", NumCode = (short)430, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "LS", CountryName = "LESOTHO", CountryPrintableName = "Lesotho", Iso3 = "LSO", NumCode = (short)426, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "LT", CountryName = "LITHUANIA", CountryPrintableName = "Lithuania", Iso3 = "LTU", NumCode = (short)440, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "LU", CountryName = "LUXEMBOURG", CountryPrintableName = "Luxembourg", Iso3 = "LUX", NumCode = (short)442, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "LV", CountryName = "LATVIA", CountryPrintableName = "Latvia", Iso3 = "LVA", NumCode = (short)428, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "LY", CountryName = "LIBYAN ARAB JAMAHIRIYA", CountryPrintableName = "Libyan Arab Jamahiriya", Iso3 = "LBY", NumCode = (short)434, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MA", CountryName = "MOROCCO", CountryPrintableName = "Morocco", Iso3 = "MAR", NumCode = (short)504, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MC", CountryName = "MONACO", CountryPrintableName = "Monaco", Iso3 = "MCO", NumCode = (short)492, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "MD", CountryName = "MOLDOVA, REPUBLIC OF", CountryPrintableName = "Moldova, Republic of", Iso3 = "MDA", NumCode = (short)498, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "ME", CountryName = "MONTENEGRO", CountryPrintableName = "Montenegro", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "MF", CountryName = "SAINT MARTIN (FRENCH PART)", CountryPrintableName = "Saint Martin (French Part)", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MG", CountryName = "MADAGASCAR", CountryPrintableName = "Madagascar", Iso3 = "MDG", NumCode = (short)450, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MH", CountryName = "MARSHALL ISLANDS", CountryPrintableName = "Marshall Islands", Iso3 = "MHL", NumCode = (short)584, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MK", CountryName = "MACEDONIA, THE FORMER YUGOSLAV REPUBLIC OF", CountryPrintableName = "Macedonia, the Former Yugoslav Republic of", Iso3 = "MKD", NumCode = (short)807, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "ML", CountryName = "MALI", CountryPrintableName = "Mali", Iso3 = "MLI", NumCode = (short)466, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MM", CountryName = "MYANMAR", CountryPrintableName = "Myanmar", Iso3 = "MMR", NumCode = (short)104, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MN", CountryName = "MONGOLIA", CountryPrintableName = "Mongolia", Iso3 = "MNG", NumCode = (short)496, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MO", CountryName = "MACAO", CountryPrintableName = "Macao", Iso3 = "MAC", NumCode = (short)446, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MP", CountryName = "NORTHERN MARIANA ISLANDS", CountryPrintableName = "Northern Mariana Islands", Iso3 = "MNP", NumCode = (short)580, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MQ", CountryName = "MARTINIQUE", CountryPrintableName = "Martinique", Iso3 = "MTQ", NumCode = (short)474, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MR", CountryName = "MAURITANIA", CountryPrintableName = "Mauritania", Iso3 = "MRT", NumCode = (short)478, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MS", CountryName = "MONTSERRAT", CountryPrintableName = "Montserrat", Iso3 = "MSR", NumCode = (short)500, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MT", CountryName = "MALTA", CountryPrintableName = "Malta", Iso3 = "MLT", NumCode = (short)470, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "MU", CountryName = "MAURITIUS", CountryPrintableName = "Mauritius", Iso3 = "MUS", NumCode = (short)480, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MV", CountryName = "MALDIVES", CountryPrintableName = "Maldives", Iso3 = "MDV", NumCode = (short)462, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MW", CountryName = "MALAWI", CountryPrintableName = "Malawi", Iso3 = "MWI", NumCode = (short)454, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MX", CountryName = "MEXICO", CountryPrintableName = "Mexico", Iso3 = "MEX", NumCode = (short)484, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MY", CountryName = "MALAYSIA", CountryPrintableName = "Malaysia", Iso3 = "MYS", NumCode = (short)458, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "MZ", CountryName = "MOZAMBIQUE", CountryPrintableName = "Mozambique", Iso3 = "MOZ", NumCode = (short)508, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "NA", CountryName = "NAMIBIA", CountryPrintableName = "Namibia", Iso3 = "NAM", NumCode = (short)516, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "NC", CountryName = "NEW CALEDONIA", CountryPrintableName = "New Caledonia", Iso3 = "NCL", NumCode = (short)540, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "NE", CountryName = "NIGER", CountryPrintableName = "Niger", Iso3 = "NER", NumCode = (short)562, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "NF", CountryName = "NORFOLK ISLAND", CountryPrintableName = "Norfolk Island", Iso3 = "NFK", NumCode = (short)574, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "NG", CountryName = "NIGERIA", CountryPrintableName = "Nigeria", Iso3 = "NGA", NumCode = (short)566, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "NI", CountryName = "NICARAGUA", CountryPrintableName = "Nicaragua", Iso3 = "NIC", NumCode = (short)558, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "NL", CountryName = "NETHERLANDS", CountryPrintableName = "Netherlands", Iso3 = "NLD", NumCode = (short)528, PostalCodeNeeded = false, PrimaryLanguage = "nl", RegionId = 2 },
                        new { Iso = "NO", CountryName = "NORWAY", CountryPrintableName = "Norway", Iso3 = "NOR", NumCode = (short)578, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "NP", CountryName = "NEPAL", CountryPrintableName = "Nepal", Iso3 = "NPL", NumCode = (short)524, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "NR", CountryName = "NAURU", CountryPrintableName = "Nauru", Iso3 = "NRU", NumCode = (short)520, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "NU", CountryName = "NIUE", CountryPrintableName = "Niue", Iso3 = "NIU", NumCode = (short)570, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "NZ", CountryName = "NEW ZEALAND", CountryPrintableName = "New Zealand", Iso3 = "NZL", NumCode = (short)554, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "OM", CountryName = "OMAN", CountryPrintableName = "Oman", Iso3 = "OMN", NumCode = (short)512, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PA", CountryName = "PANAMA", CountryPrintableName = "Panama", Iso3 = "PAN", NumCode = (short)591, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PE", CountryName = "PERU", CountryPrintableName = "Peru", Iso3 = "PER", NumCode = (short)604, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PF", CountryName = "FRENCH POLYNESIA", CountryPrintableName = "French Polynesia", Iso3 = "PYF", NumCode = (short)258, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PG", CountryName = "PAPUA NEW GUINEA", CountryPrintableName = "Papua New Guinea", Iso3 = "PNG", NumCode = (short)598, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PH", CountryName = "PHILIPPINES", CountryPrintableName = "Philippines", Iso3 = "PHL", NumCode = (short)608, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PK", CountryName = "PAKISTAN", CountryPrintableName = "Pakistan", Iso3 = "PAK", NumCode = (short)586, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PL", CountryName = "POLAND", CountryPrintableName = "Poland", Iso3 = "POL", NumCode = (short)616, PostalCodeNeeded = false, PrimaryLanguage = "pl", RegionId = 2 },
                        new { Iso = "PM", CountryName = "SAINT PIERRE AND MIQUELON", CountryPrintableName = "Saint Pierre and Miquelon", Iso3 = "SPM", NumCode = (short)666, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PN", CountryName = "PITCAIRN", CountryPrintableName = "Pitcairn", Iso3 = "PCN", NumCode = (short)612, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PR", CountryName = "PUERTO RICO", CountryPrintableName = "Puerto Rico", Iso3 = "PRI", NumCode = (short)630, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PS", CountryName = "PALESTINIAN TERRITORY, OCCUPIED", CountryPrintableName = "Palestinian Territory, Occupied", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PT", CountryName = "PORTUGAL", CountryPrintableName = "Portugal", Iso3 = "PRT", NumCode = (short)620, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PW", CountryName = "PALAU", CountryPrintableName = "Palau", Iso3 = "PLW", NumCode = (short)585, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "PY", CountryName = "PARAGUAY", CountryPrintableName = "Paraguay", Iso3 = "PRY", NumCode = (short)600, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "QA", CountryName = "QATAR", CountryPrintableName = "Qatar", Iso3 = "QAT", NumCode = (short)634, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "RE", CountryName = "REUNION", CountryPrintableName = "Reunion", Iso3 = "REU", NumCode = (short)638, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "RO", CountryName = "ROMANIA", CountryPrintableName = "Romania", Iso3 = "ROU", NumCode = (short)642, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "RS", CountryName = "SERBIA", CountryPrintableName = "Serbia", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "RU", CountryName = "RUSSIAN FEDERATION", CountryPrintableName = "Russian Federation", Iso3 = "RUS", NumCode = (short)643, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "RW", CountryName = "RWANDA", CountryPrintableName = "Rwanda", Iso3 = "RWA", NumCode = (short)646, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SA", CountryName = "SAUDI ARABIA", CountryPrintableName = "Saudi Arabia", Iso3 = "SAU", NumCode = (short)682, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SB", CountryName = "SOLOMON ISLANDS", CountryPrintableName = "Solomon Islands", Iso3 = "SLB", NumCode = (short)90, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SC", CountryName = "SEYCHELLES", CountryPrintableName = "Seychelles", Iso3 = "SYC", NumCode = (short)690, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SD", CountryName = "SUDAN", CountryPrintableName = "Sudan", Iso3 = "SDN", NumCode = (short)736, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SE", CountryName = "SWEDEN", CountryPrintableName = "Sweden", Iso3 = "SWE", NumCode = (short)752, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "SG", CountryName = "SINGAPORE", CountryPrintableName = "Singapore", Iso3 = "SGP", NumCode = (short)702, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SH", CountryName = "SAINT HELENA", CountryPrintableName = "Saint Helena", Iso3 = "SHN", NumCode = (short)654, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SI", CountryName = "SLOVENIA", CountryPrintableName = "Slovenia", Iso3 = "SVN", NumCode = (short)705, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "SJ", CountryName = "SVALBARD AND JAN MAYEN", CountryPrintableName = "Svalbard and Jan Mayen", Iso3 = "SJM", NumCode = (short)744, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SK", CountryName = "SLOVAKIA", CountryPrintableName = "Slovakia", Iso3 = "SVK", NumCode = (short)703, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "SL", CountryName = "SIERRA LEONE", CountryPrintableName = "Sierra Leone", Iso3 = "SLE", NumCode = (short)694, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SM", CountryName = "SAN MARINO", CountryPrintableName = "San Marino", Iso3 = "SMR", NumCode = (short)674, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "SN", CountryName = "SENEGAL", CountryPrintableName = "Senegal", Iso3 = "SEN", NumCode = (short)686, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SO", CountryName = "SOMALIA", CountryPrintableName = "Somalia", Iso3 = "SOM", NumCode = (short)706, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SR", CountryName = "SURINAME", CountryPrintableName = "Suriname", Iso3 = "SUR", NumCode = (short)740, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SS", CountryName = "SOUTH SUDAN", CountryPrintableName = "South Sudan", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "ST", CountryName = "SAO TOME AND PRINCIPE", CountryPrintableName = "Sao Tome and Principe", Iso3 = "STP", NumCode = (short)678, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SV", CountryName = "EL SALVADOR", CountryPrintableName = "El Salvador", Iso3 = "SLV", NumCode = (short)222, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SX", CountryName = "SINT MAARTEN (DUTCH PART)", CountryPrintableName = "Sint Maarten (Dutch Part)", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SY", CountryName = "SYRIAN ARAB REPUBLIC", CountryPrintableName = "Syrian Arab Republic", Iso3 = "SYR", NumCode = (short)760, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "SZ", CountryName = "SWAZILAND", CountryPrintableName = "Swaziland", Iso3 = "SWZ", NumCode = (short)748, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TC", CountryName = "TURKS AND CAICOS ISLANDS", CountryPrintableName = "Turks and Caicos Islands", Iso3 = "TCA", NumCode = (short)796, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TD", CountryName = "CHAD", CountryPrintableName = "Chad", Iso3 = "TCD", NumCode = (short)148, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TF", CountryName = "FRENCH SOUTHERN TERRITORIES", CountryPrintableName = "French Southern Territories", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TG", CountryName = "TOGO", CountryPrintableName = "Togo", Iso3 = "TGO", NumCode = (short)768, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TH", CountryName = "THAILAND", CountryPrintableName = "Thailand", Iso3 = "THA", NumCode = (short)764, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TJ", CountryName = "TAJIKISTAN", CountryPrintableName = "Tajikistan", Iso3 = "TJK", NumCode = (short)762, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TK", CountryName = "TOKELAU", CountryPrintableName = "Tokelau", Iso3 = "TKL", NumCode = (short)772, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TL", CountryName = "TIMOR-LESTE", CountryPrintableName = "Timor-Leste", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TM", CountryName = "TURKMENISTAN", CountryPrintableName = "Turkmenistan", Iso3 = "TKM", NumCode = (short)795, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TN", CountryName = "TUNISIA", CountryPrintableName = "Tunisia", Iso3 = "TUN", NumCode = (short)788, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TO", CountryName = "TONGA", CountryPrintableName = "Tonga", Iso3 = "TON", NumCode = (short)776, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TR", CountryName = "TURKEY", CountryPrintableName = "Turkey", Iso3 = "TUR", NumCode = (short)792, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TT", CountryName = "TRINIDAD AND TOBAGO", CountryPrintableName = "Trinidad and Tobago", Iso3 = "TTO", NumCode = (short)780, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TV", CountryName = "TUVALU", CountryPrintableName = "Tuvalu", Iso3 = "TUV", NumCode = (short)798, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TW", CountryName = "TAIWAN, PROVINCE OF CHINA", CountryPrintableName = "Taiwan, Province of China", Iso3 = "TWN", NumCode = (short)158, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "TZ", CountryName = "TANZANIA, UNITED REPUBLIC OF", CountryPrintableName = "Tanzania, United Republic of", Iso3 = "TZA", NumCode = (short)834, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "UA", CountryName = "UKRAINE", CountryPrintableName = "Ukraine", Iso3 = "UKR", NumCode = (short)804, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "UG", CountryName = "UGANDA", CountryPrintableName = "Uganda", Iso3 = "UGA", NumCode = (short)800, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "UM", CountryName = "UNITED STATES MINOR OUTLYING ISLANDS", CountryPrintableName = "United States Minor Outlying Islands", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 1 },
                        new { Iso = "US", CountryName = "UNITED STATES", CountryPrintableName = "United States", Iso3 = "USA", NumCode = (short)840, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 1 },
                        new { Iso = "UY", CountryName = "URUGUAY", CountryPrintableName = "Uruguay", Iso3 = "URY", NumCode = (short)858, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "UZ", CountryName = "UZBEKISTAN", CountryPrintableName = "Uzbekistan", Iso3 = "UZB", NumCode = (short)860, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "VA", CountryName = "HOLY SEE (VATICAN CITY STATE)", CountryPrintableName = "Holy See (Vatican City State)", Iso3 = "VAT", NumCode = (short)336, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 2 },
                        new { Iso = "VC", CountryName = "SAINT VINCENT AND THE GRENADINES", CountryPrintableName = "Saint Vincent and the Grenadines", Iso3 = "VCT", NumCode = (short)670, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "VE", CountryName = "VENEZUELA", CountryPrintableName = "Venezuela", Iso3 = "VEN", NumCode = (short)862, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "VG", CountryName = "VIRGIN ISLANDS, BRITISH", CountryPrintableName = "Virgin Islands, British", Iso3 = "VGB", NumCode = (short)92, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "VI", CountryName = "VIRGIN ISLANDS, U.S.", CountryPrintableName = "Virgin Islands, U.s.", Iso3 = "VIR", NumCode = (short)850, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "VN", CountryName = "VIET NAM", CountryPrintableName = "Viet Nam", Iso3 = "VNM", NumCode = (short)704, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "VU", CountryName = "VANUATU", CountryPrintableName = "Vanuatu", Iso3 = "VUT", NumCode = (short)548, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "WF", CountryName = "WALLIS AND FUTUNA", CountryPrintableName = "Wallis and Futuna", Iso3 = "WLF", NumCode = (short)876, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "WS", CountryName = "SAMOA", CountryPrintableName = "Samoa", Iso3 = "WSM", NumCode = (short)882, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "YE", CountryName = "YEMEN", CountryPrintableName = "Yemen", Iso3 = "YEM", NumCode = (short)887, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "YT", CountryName = "MAYOTTE", CountryPrintableName = "Mayotte", PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "ZA", CountryName = "SOUTH AFRICA", CountryPrintableName = "South Africa", Iso3 = "ZAF", NumCode = (short)710, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "ZM", CountryName = "ZAMBIA", CountryPrintableName = "Zambia", Iso3 = "ZMB", NumCode = (short)894, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 },
                        new { Iso = "ZW", CountryName = "ZIMBABWE", CountryPrintableName = "Zimbabwe", Iso3 = "ZWE", NumCode = (short)716, PostalCodeNeeded = false, PrimaryLanguage = "en", RegionId = 5 }
                    );
                });

            modelBuilder.Entity("dt.Calculator.Model.Domain.Lookup.Currency", b =>
                {
                    b.Property<string>("Iso")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3);

                    b.Property<bool>("Active");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CreationUser")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("CurrencyName");

                    b.Property<string>("CurrencyNumericCode");

                    b.Property<int>("Exponent");

                    b.Property<DateTime?>("LastUpdateTime");

                    b.Property<string>("LastUpdateUser")
                        .HasMaxLength(250);

                    b.Property<DateTime>("NonNullableDate");

                    b.Property<string>("Symbol");

                    b.Property<bool?>("SymbolAfterPrice");

                    b.HasKey("Iso");

                    b.ToTable("Currency","Lookup");

                    b.HasData(
                        new { Iso = "EUR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 73, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Euro", CurrencyNumericCode = "978", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "€", SymbolAfterPrice = true },
                        new { Iso = "USD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "United States dollar", CurrencyNumericCode = "840", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "$", SymbolAfterPrice = false },
                        new { Iso = "GBP", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Pound sterling", CurrencyNumericCode = "826", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "£", SymbolAfterPrice = false },
                        new { Iso = "AUD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Australian dollar", CurrencyNumericCode = "36", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "AU$", SymbolAfterPrice = false },
                        new { Iso = "BGN", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Bulgarian lev", CurrencyNumericCode = "975", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "лв", SymbolAfterPrice = true },
                        new { Iso = "CAD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Canadian dollar", CurrencyNumericCode = "124", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "CA$", SymbolAfterPrice = false },
                        new { Iso = "CHF", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Swiss franc", CurrencyNumericCode = "756", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "CHF", SymbolAfterPrice = false },
                        new { Iso = "CZK", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Czech koruna", CurrencyNumericCode = "203", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Kč", SymbolAfterPrice = true },
                        new { Iso = "DKK", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Danish krone", CurrencyNumericCode = "208", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "kr", SymbolAfterPrice = false },
                        new { Iso = "ZAR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "South African rand", CurrencyNumericCode = "710", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "R", SymbolAfterPrice = false },
                        new { Iso = "HUF", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Hungarian forint", CurrencyNumericCode = "348", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Ft", SymbolAfterPrice = true },
                        new { Iso = "LTL", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Lithuanian litas", CurrencyNumericCode = "440", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Lt", SymbolAfterPrice = false },
                        new { Iso = "LVL", Active = false, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Latvian lats", CurrencyNumericCode = "428", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Ls", SymbolAfterPrice = false },
                        new { Iso = "NOK", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Norwegian krone", CurrencyNumericCode = "578", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "kr", SymbolAfterPrice = false },
                        new { Iso = "NZD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "New Zealand dollar", CurrencyNumericCode = "554", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "NZ$", SymbolAfterPrice = false },
                        new { Iso = "PLN", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Polish zloty", CurrencyNumericCode = "985", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "zł", SymbolAfterPrice = true },
                        new { Iso = "QAR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Qatari riyal", CurrencyNumericCode = "634", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "ر.ق", SymbolAfterPrice = true },
                        new { Iso = "RON", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Romanian new leu", CurrencyNumericCode = "946", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "lei", SymbolAfterPrice = true },
                        new { Iso = "SAR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Saudi riyal", CurrencyNumericCode = "682", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "ر.س", SymbolAfterPrice = true },
                        new { Iso = "SEK", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Swedish krona/kronor", CurrencyNumericCode = "752", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "kr", SymbolAfterPrice = false },
                        new { Iso = "AED", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "United Arab Emirates dirham", CurrencyNumericCode = "784", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "د.إ", SymbolAfterPrice = true },
                        new { Iso = "ARS", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Argentine peso", CurrencyNumericCode = "32", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "$", SymbolAfterPrice = false },
                        new { Iso = "AZN", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Azerbaijani manat", CurrencyNumericCode = "944", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "ман", SymbolAfterPrice = false },
                        new { Iso = "BBD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Barbados dollar", CurrencyNumericCode = "52", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "$", SymbolAfterPrice = false },
                        new { Iso = "BDT", Active = false, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Bangladeshi taka", CurrencyNumericCode = "50", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Tk", SymbolAfterPrice = false },
                        new { Iso = "BHD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Bahraini dinar", CurrencyNumericCode = "48", Exponent = 3, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = ".د.ب", SymbolAfterPrice = true },
                        new { Iso = "BMD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Bermudian dollar", CurrencyNumericCode = "60", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Bd$", SymbolAfterPrice = false },
                        new { Iso = "BOB", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Boliviano", CurrencyNumericCode = "68", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "$b", SymbolAfterPrice = false },
                        new { Iso = "BRL", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Brazilian real", CurrencyNumericCode = "986", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "R$", SymbolAfterPrice = false },
                        new { Iso = "BYR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Belarusian ruble", CurrencyNumericCode = "974", Exponent = 0, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "BR", SymbolAfterPrice = true },
                        new { Iso = "BZD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Belize dollar", CurrencyNumericCode = "84", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "BZ$", SymbolAfterPrice = false },
                        new { Iso = "CLP", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Chilean peso", CurrencyNumericCode = "152", Exponent = 0, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Ch$", SymbolAfterPrice = false },
                        new { Iso = "CNY", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Chinese yuan", CurrencyNumericCode = "156", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Y", SymbolAfterPrice = false },
                        new { Iso = "COP", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Colombian peso", CurrencyNumericCode = "170", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Col$", SymbolAfterPrice = false },
                        new { Iso = "CRC", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Costa Rican colon", CurrencyNumericCode = "188", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "₡", SymbolAfterPrice = false },
                        new { Iso = "DOP", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Dominican peso", CurrencyNumericCode = "214", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "RD$", SymbolAfterPrice = false },
                        new { Iso = "EGP", Active = false, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Egyptian pound", CurrencyNumericCode = "818", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "£E", SymbolAfterPrice = false },
                        new { Iso = "GTQ", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Guatemalan quetzal", CurrencyNumericCode = "320", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Q", SymbolAfterPrice = false },
                        new { Iso = "HKD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Hong Kong dollar", CurrencyNumericCode = "344", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "HK$", SymbolAfterPrice = false },
                        new { Iso = "HNL", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Honduran lempira", CurrencyNumericCode = "340", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "L", SymbolAfterPrice = false },
                        new { Iso = "HRK", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Croatian kuna", CurrencyNumericCode = "191", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "kn", SymbolAfterPrice = true },
                        new { Iso = "IDR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Indonesian rupiah", CurrencyNumericCode = "360", Exponent = 0, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Rp", SymbolAfterPrice = false },
                        new { Iso = "ILS", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Israeli new shekel", CurrencyNumericCode = "376", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "NIS", SymbolAfterPrice = false },
                        new { Iso = "INR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Indian rupee", CurrencyNumericCode = "356", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Rs", SymbolAfterPrice = false },
                        new { Iso = "JMD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Jamaican dollar", CurrencyNumericCode = "388", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "J$", SymbolAfterPrice = false },
                        new { Iso = "JOD", Active = false, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Jordanian dinar", CurrencyNumericCode = "400", Exponent = 3, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "JD", SymbolAfterPrice = false },
                        new { Iso = "JPY", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Japanese yen", CurrencyNumericCode = "392", Exponent = 0, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "¥", SymbolAfterPrice = false },
                        new { Iso = "KHR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Cambodian riel", CurrencyNumericCode = "116", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "CR", SymbolAfterPrice = false },
                        new { Iso = "KRW", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "South Korean won", CurrencyNumericCode = "410", Exponent = 0, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "W", SymbolAfterPrice = false },
                        new { Iso = "KWD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Kuwaiti dinar", CurrencyNumericCode = "414", Exponent = 3, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "د.ك", SymbolAfterPrice = true },
                        new { Iso = "KZT", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Kazakhstani tenge", CurrencyNumericCode = "398", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "KZT", SymbolAfterPrice = false },
                        new { Iso = "LKR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Sri Lankan rupee", CurrencyNumericCode = "144", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "SLRs", SymbolAfterPrice = false },
                        new { Iso = "MDL", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Moldovan leu", CurrencyNumericCode = "498", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "MDL", SymbolAfterPrice = false },
                        new { Iso = "MVR", Active = false, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Maldivian rufiyaa", CurrencyNumericCode = "462", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Rf", SymbolAfterPrice = false },
                        new { Iso = "MXN", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Mexican peso", CurrencyNumericCode = "484", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Mex$", SymbolAfterPrice = false },
                        new { Iso = "MYR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Malaysian ringgit", CurrencyNumericCode = "458", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "RM", SymbolAfterPrice = false },
                        new { Iso = "NIO", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Nicaraguan córdoba", CurrencyNumericCode = "558", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "C$", SymbolAfterPrice = false },
                        new { Iso = "OMR", Active = false, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Omani rial", CurrencyNumericCode = "512", Exponent = 3, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "RO", SymbolAfterPrice = false },
                        new { Iso = "PAB", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Panamanian balboa", CurrencyNumericCode = "590", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "B", SymbolAfterPrice = false },
                        new { Iso = "PEN", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Peruvian nuevo sol", CurrencyNumericCode = "604", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "S/.", SymbolAfterPrice = false },
                        new { Iso = "PHP", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Philippine peso", CurrencyNumericCode = "608", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "₱", SymbolAfterPrice = false },
                        new { Iso = "PKR", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Pakistani rupee", CurrencyNumericCode = "586", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Rs", SymbolAfterPrice = false },
                        new { Iso = "PYG", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Paraguayan guaraní", CurrencyNumericCode = "600", Exponent = 0, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Gs", SymbolAfterPrice = false },
                        new { Iso = "RUB", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Russian ruble", CurrencyNumericCode = "643", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "руб", SymbolAfterPrice = false },
                        new { Iso = "SGD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Singapore dollar", CurrencyNumericCode = "702", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "$", SymbolAfterPrice = false },
                        new { Iso = "THB", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Thai baht", CurrencyNumericCode = "764", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "฿", SymbolAfterPrice = false },
                        new { Iso = "TRY", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Turkish lira", CurrencyNumericCode = "949", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "TL", SymbolAfterPrice = false },
                        new { Iso = "TWD", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "New Taiwan dollar", CurrencyNumericCode = "901", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "NT$", SymbolAfterPrice = false },
                        new { Iso = "UAH", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Ukrainian hryvnia", CurrencyNumericCode = "980", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "₴", SymbolAfterPrice = false },
                        new { Iso = "VEF", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Venezuelan bolívar", CurrencyNumericCode = "937", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "Bs.", SymbolAfterPrice = false },
                        new { Iso = "GIP", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Gibraltar pound", CurrencyNumericCode = "292", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "£", SymbolAfterPrice = false },
                        new { Iso = "ROL", Active = true, CreationTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), CreationUser = "Seed", CurrencyName = "Romanian leu", CurrencyNumericCode = "642", Exponent = 2, LastUpdateTime = new DateTime(2018, 7, 26, 22, 26, 24, 75, DateTimeKind.Local), LastUpdateUser = "Seed", NonNullableDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Symbol = "lei", SymbolAfterPrice = false }
                    );
                });

            modelBuilder.Entity("dt.Calculator.Model.Domain.Calculator.Calculator", b =>
                {
                    b.HasOne("dt.Calculator.Model.Domain.Calculator.CalculatorSetting", "CalculatorSetting")
                        .WithMany()
                        .HasForeignKey("CalculatorSettingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("dt.Calculator.Model.Domain.Lookup.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryIso")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("dt.Calculator.Model.Domain.Calculator.CalculatorSetting", b =>
                {
                    b.HasOne("dt.Calculator.Model.Domain.Lookup.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryIso")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("dt.Calculator.Model.Domain.Lookup.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyIso")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
